<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.MemberDao">

  <select id="existsById" resultType="boolean">
		select count(*) from member where username=#{username} and rownum&lt;=1
  </select>
  
  <select id="existsByEmail" resultType="boolean">
		select count(*) from member where email=#{email} and rownum&lt;=1
  </select>		
  
  <insert id="save">
      insert into member(username, password, irum, email, birthday, profile, levels, checkcode)
  		values(#{username}, #{password}, #{irum}, #{email}, #{birthday}, #{profile}, #{levels}, #{checkcode}) 
  </insert>  
  
	<select id="findById" resultType="com.example.demo.entity.Member">
		select * from member where username=#{username} and rownum&lt;=1
	</select>
  
  <select id="findByEmail" resultType="com.example.demo.entity.Member">
  	select * from member where email=#{email} and rownum&lt;=1
  </select>
  
  <!-- 제목, 내용, 조회수, 좋아요, 싫어요, 댓글수 중 사용자가 선택한 컬럼을 변경 -->
  <update id="update">
  	update member
  	  <trim prefix="set" suffixOverrides=",">
	   		<if test="password!=null">password=#{password},</if>
	  		<if test="email!=null">email=#{email},</if>
	  		<if test="profile!=null">profile=#{profile},</if>
	  		<if test="role!=null">role=#{role},</if>
	  		<if test="loginFailCnt!=null">loginFailCnt=#{loginFailCnt},</if>
	  		<if test="enabled!=null">enabled=#{enabled},</if>
	  		<if test="checkcode!=null">checkcode=null,</if>
	  		<if test="buyCount!=null">buyCount=#{buyCount},</if>
	  		<if test="buyMoney!=null">buyMoney=#{buyMoney},</if>
	  		<if test="levels!=null">levels=#{levels},</if>
	  </trim>
  	where username=#{username}
  </update>
 
  <delete id="deleteById">
  	delete from member where username=#{username}
  </delete>

  <select id="findByCheckcode" resultType="com.example.demo.entity.Member">
  	select * from member where checkcode=#{checkcode} and rownum&lt;=1
  </select>
  
  <select id="findByCheckcodeIsNotNull" resultType="string">
  	select username from member where checkcode !=''
  </select>
  
  <delete id="deleteByUsernames">
  	delete from member where username in
  	<foreach collection="usernames" item="username" open="(" close=")" separator=","> 
	  #{username}
	</foreach> 
  </delete>
</mapper>
